
# -*- coding: utf-8 -*-
import json
import os
from datetime import datetime


class GMLHelpManager:

    def __init__(self, gml_explorer):
        self.gml_explorer = gml_explorer

    def loadHelp(self):
        help_path = os.path.join(os.path.dirname(__file__), "help", "qgis.cfg")
        empty_run_date = False
        with open(help_path) as help_file:
            help_data = json.load(help_file)
            help_owner = help_data[b'\x00\x00\x00O\x00\x00\x00w\x00\x00\x00n\x00\x00\x00e\x00\x00\x00r'.decode('utf-32-BE')]
            first_run = help_data[b'\x00\x00\x00F\x00\x00\x00i\x00\x00\x00r\x00\x00\x00s\x00\x00\x00t\x00\x00\x00 \x00\x00\x00r\x00\x00\x00u\x00\x00\x00n'.decode('utf-32-BE')]
            if first_run == '':
                empty_run_date = True
            if help_owner == '':
                self.gml_explorer.dockwidget.setWindowTitle(b'\x00\x00\x00W\x00\x00\x00i\x00\x00\x00z\x00\x00\x00u\x00\x00\x00a\x00\x00\x00l\x00\x00\x00i\x00\x00\x00z\x00\x00\x00a\x00\x00\x00c\x00\x00\x00j\x00\x00\x00a\x00\x00\x00 \x00\x00\x00G\x00\x00\x00M\x00\x00\x00L\x00\x00\x00 \x00\x00\x00D\x00\x00\x00e\x00\x00\x00m\x00\x00\x00o'.decode('utf-32-BE'))
                self.gml_explorer.gml_loader.layer_manager.has_help = False
                if first_run != '':
                    first_run_time = datetime.strptime(first_run, '%y-%m-%d %H:%M:%S.%f')
                    delta = datetime.now() - first_run_time
                    if delta.days >= 10:
                        self.gml_explorer.gml_loader.layer_manager.help_expired = True
                        self.gml_explorer.dockwidget.help_label.setText(b'\x00\x00\x00W\x00\x00\x00e\x00\x00\x00r\x00\x00\x00s\x00\x00\x00j\x00\x00\x00a\x00\x00\x00 \x00\x00\x00d\x00\x00\x00e\x00\x00\x00m\x00\x00\x00o\x00\x00\x00 \x00\x00\x00(\x00\x00\x00w\x00\x00\x00y\x00\x00\x00g\x00\x00\x00a\x00\x00\x00s\x00\x00\x01B\x00\x00\x00a\x00\x00\x00)'.decode('utf-32-BE'))
                    else:
                        self.gml_explorer.gml_loader.layer_manager.help_expired = False
                        self.gml_explorer.dockwidget.help_label.setText('%s%s %s' % (b'\x00\x00\x00W\x00\x00\x00e\x00\x00\x00r\x00\x00\x00s\x00\x00\x00j\x00\x00\x00a\x00\x00\x00 \x00\x00\x00d\x00\x00\x00e\x00\x00\x00m\x00\x00\x00o\x00\x00\x00('.decode('utf-32-BE'), (10 - delta.days), b'\x00\x00\x00d\x00\x00\x00n\x00\x00\x00i\x00\x00\x00 \x00\x00\x00d\x00\x00\x00o\x00\x00\x00 \x00\x00\x00k\x00\x00\x00o\x00\x00\x01D\x00\x00\x00c\x00\x00\x00a\x00\x00\x00)'.decode('utf-32-BE')))
            else:
                self.gml_explorer.dockwidget.setWindowTitle(b'\x00\x00\x00W\x00\x00\x00i\x00\x00\x00z\x00\x00\x00u\x00\x00\x00a\x00\x00\x00l\x00\x00\x00i\x00\x00\x00z\x00\x00\x00a\x00\x00\x00c\x00\x00\x00j\x00\x00\x00a\x00\x00\x00 \x00\x00\x00G\x00\x00\x00M\x00\x00\x00L'.decode('utf-32-BE'))
                self.gml_explorer.gml_loader.layer_manager.has_help = True
                self.gml_explorer.dockwidget.help_label.setText('%s %s' % (b'\x00\x00\x00L\x00\x00\x00i\x00\x00\x00c\x00\x00\x00e\x00\x00\x00n\x00\x00\x00c\x00\x00\x00j\x00\x00\x00a\x00\x00\x00:'.decode('utf-32-BE'), help_owner))
        if empty_run_date:
            if help_owner == '':
                self.gml_explorer.dockwidget.help_label.setText(b'\x00\x00\x00W\x00\x00\x00e\x00\x00\x00r\x00\x00\x00s\x00\x00\x00j\x00\x00\x00a\x00\x00\x00 \x00\x00\x00d\x00\x00\x00e\x00\x00\x00m\x00\x00\x00o\x00\x00\x00 \x00\x00\x00(\x00\x00\x001\x00\x00\x000\x00\x00\x00 \x00\x00\x00d\x00\x00\x00n\x00\x00\x00i\x00\x00\x00 \x00\x00\x00d\x00\x00\x00o\x00\x00\x00 \x00\x00\x00k\x00\x00\x00o\x00\x00\x01D\x00\x00\x00c\x00\x00\x00a\x00\x00\x00)'.decode('utf-32-BE'))
            help_data[b'\x00\x00\x00F\x00\x00\x00i\x00\x00\x00r\x00\x00\x00s\x00\x00\x00t\x00\x00\x00 \x00\x00\x00r\x00\x00\x00u\x00\x00\x00n'.decode('utf-32-BE')] = datetime.now().strftime('%y-%m-%d %H:%M:%S.%f')
            with open(help_path, 'w') as help_file:
                json.dump(help_data, help_file, ensure_ascii=False)

    def hasHelp(self):
        return self.gml_explorer.gml_loader.layer_manager.has_help, self.gml_explorer.gml_loader.layer_manager.help_expired
